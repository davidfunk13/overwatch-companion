enum Platform{
  PC
  NINTENDO
  XBOX
  PLAYSTATION
}

enum Role{
  TANK
  DAMAGE
  SUPPORT
}


# Battletag schemas
type Battletag {
  id: Int!
  userId: Int!
  battletag: String!
  platform: Platform!
  identifier: Int
}

input InputBattletag {
  userId: Int!
  battletag: String!
  platform: Platform!
  identifier: Int
}

interface MutateItemPayload {
  id: Int
  success: Boolean!
}

type MutateItemPayloadSuccess implements MutateItemPayload {
  id: Int!
  success: Boolean!
  message: String!
}

type MutateItemPayloadFailure implements MutateItemPayload {
  id: Int!
  success: Boolean!
  error: String!
}

# Session schema
type Session {
  id: Int!
  userId: Int!
  roleType: Role!
}

input InputSession {
  userId: Int!
  roleType: Role!
}

# Queries 
type Query {
  battletags: [Battletag!]!
  sessions: [Session!]!
}

# Mutations
type Mutation {
  createBattletag(input: InputBattletag!): Battletag!
  deleteBattletag(input: Int!): MutateItemPayload!
  createSession(input: InputSession!): Session!
  deleteSession(input: Int!): MutateItemPayload!
}