# # # # # # QUERIES # # # # # #

# # # Battletag Queries # # #

# Select battletag belonging to a user. takes an id.
# Arguments: { id int }
query {
  battletags(input: 1) {
    id
    userId
    name
    blizzId
    urlName
  }
}

# # # Session Queries # # #

# Get all sessions for user
# Arguments: { userId int, battletagId int }

query {
  sessions(input: { userId: 1, battletagId: 2 }) {
    id
    userId
    battletagId
    starting_sr_tank
    sr_tank
    starting_sr_damage
    sr_damage
    starting_sr_support
    sr_support
  }
}

# Get One Session
# Arguments: id int, battletagId int
query {
  session(input: { id: 27, battletagId: 4 }) {
    ... on QueryItemSuccess {
      success
      data {
        ... on Session {
          id
          userId
          battletagId
          starting_sr_tank
          sr_tank
          starting_sr_damage
          sr_damage
          starting_sr_support
          sr_support
        }
      }
    }
    ... on QueryItemFailure {
      success
      error
    }
  }
}

# # # Game Queries # # #

# Get a sessions games
# ROLE IS OPTIONAL
query {
  games(input: { userId: 1, sessionId: 1, battletagId: 1, role: TANK }) {
    id
    userId
    battletagId
    sessionId
    location
    role
    sr_in
    sr_out
    match_outcome
  }
}

# # # # # # MUTATIONS # # # # # #

# # # Battletag Mutations # # #

# Create a battletag. takes all this junk below as an argument.

mutation {
  createBattletag(
    input: {
      userId: 1
      name: "buttkegels#1602"
      urlName: "buttkegels-1602"
      blizzId: 802120090
      level: 117
      playerLevel: 117
      platform: PC
      isPublic: true
      portrait: "0x02500000000002F7"
    }
  ) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
      data {
        ... on Battletag {
          userId
          name
          urlName
          blizzId
          level
          playerLevel
          platform
          isPublic
          portrait
        }
      }
    }
    ... on MutateItemPayloadFailure {
      error
      data
    }
  }
}

# Delete battletag. takes id of battletag as input.
mutation {
  deleteBattletag(input: 5) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
    }
    ... on MutateItemPayloadFailure {
      error
      data
    }
  }
}

# # # Session Mutations # # #

# Create a session. takes a userId and a battletagId as input.
mutation {
  createSession(
    input: {
      userId: 1
      battletagId: 8
      starting_sr_support: 2222
      starting_sr_tank: 2222
    }
  ) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
      data {
        ... on Session {
          id
          userId
          battletagId
          starting_sr_tank
          sr_tank
          starting_sr_damage
          sr_damage
          starting_sr_support
          sr_support
        }
      }
    }
    ... on MutateItemPayloadFailure {
      error
    }
  }
}

# Update a sessions starting SR
mutation {
  updateSessionStartingSR(
    input: {
      id: 26
      userId: 1
      battletagId: 5
      role: SUPPORT
      starting_sr: 2222
    }
  ) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
      data {
        ... on Session {
          id
          userId
          battletagId
          starting_sr_tank
          sr_tank
          starting_sr_damage
          sr_damage
          starting_sr_support
          sr_support
        }
      }
    }
    ... on MutateItemPayloadFailure {
      error
      data
    }
  }
}

# DELETE a session
mutation {
  deleteSession(input: 37) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
    }
    ... on MutateItemPayloadFailure {
      error
    }
  }
}

# # # Game Mutations # # #

# Create a game. takes all this junk as input

mutation {
  createGame(
    input: {
      userId: 1
      battletagId: 5
      sessionId: 26
      location: ROUTE66
      role: DAMAGE
      sr_out: 3333
      match_outcome: WIN
    }
  ) {
    success
    ... on MutateItemPayloadSuccess {
      id
      message
      data {
        ... on Game {
          id
          userId
          battletagId
          sessionId
          location
          role
          sr_in
          sr_out
          match_outcome
        }
      }
    }
  }
}
